<?xml version="1.0"?>
<robot name="ackermann" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Dimensions taken 2019 from Chevy Cruze https://www.caranddriver.com/chevrolet/cruze/specs -->

  <!-- Mass in kilograms -->
  <xacro:property name="chassis_mass" value="1351" />
  <xacro:property name="wheel_mass" value="11" />
  <!-- Length in meters -->
  <xacro:property name="chassis_length" value="4.45" />
  <xacro:property name="chassis_width" value="2.7" />
  <xacro:property name="chassis_height" value="1.45" />
  <xacro:property name="wheel_diam" value="0.7112" />
  <xacro:property name="wheel_depth" value="0.2" />
  <!-- Constant -->
  <xacro:property name="pi" value="3.1415" />


  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>

  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>

  <!-- Moment of inertia formulas gotten from wikipedia: https://en.wikipedia.org/wiki/List_of_moments_of_inertia#List_of_3D_inertia_tensors -->
  <xacro:macro name="solid_cylinder_inertial" params="mass r d">
    <inertial>
      <mass value="${mass}" />
      <inertia  ixx="${(1/12)*mass*(3*r*r + d*d)}" ixy="0.0" ixz="0.0" iyy="${(1/2)*mass*r*r}" iyz="0.0" izz="${(1/12)*mass*(3*r*r + d*d)}" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="box_inertial" params="mass h w l">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="${(1/12)*mass*(w*w + h*h)}" ixy="0.0" ixz="0.0" iyy="${(1/12)*mass*(h*h + l*l)}" iyz="0.0" izz="${(1/12)*mass*(w*w + l*l)}"/>
    </inertial>
  </xacro:macro>

  <!-- Base link should not have inertia -->
  <link name="base_link"/>

  <joint name="base_link_connection" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <axis xyz="1 0 0"/>
  </joint>

  <link name="chassis">
    <visual>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>
    <xacro:box_inertial mass="${chassis_mass}" h="${chassis_height}" w="${chassis_width}" l="${chassis_length}"/>
  </link>

  <xacro:macro name="wheel" params="side location steer">
    <link name="${location}_${side}_wheel">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${wheel_diam/2}" length="${wheel_depth}"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${wheel_diam/2}" length="${wheel_depth}"/>
        </geometry>
      </collision>
      <xacro:solid_cylinder_inertial mass="${wheel_mass}" r="${wheel_diam/2}" d="${wheel_depth}"/>
    </link>

    <joint name="${location}_${side}_wheel_velocity_joint" type="continuous">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="${location}_${side}_linkage"/>
      <child link="${location}_${side}_wheel"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <!-- This block provides the simulator (Gazebo) with information on a few additional
    physical properties. See http://gazebosim.org/tutorials/?tut=ros_urdf for more-->
    <gazebo reference="${location}_${side}_wheel">
      <mu1>0.9</mu1>
      <mu2>0.9</mu2>
      <minDepth>0.005</minDepth>
      <kp>1e8</kp>
      <material>Gazebo/Grey</material>
    </gazebo>

    <!-- This block connects the wheel joint to an actuator (motor), which informs both
    simulation and visualization of the robot -->
    <!-- <transmission name="${location}_${side}_wheel_velocity_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${location}_${side}_wheel_velocity_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${location}_${side}_wheel_velocity_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>

    <xacro:if value="${steer}">
      <transmission name="${location}_${side}_wheel_steer_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="${location}_${side}_wheel_steer_motor">
          <mechanicalReduction>1</mechanicalReduction>
        </actuator>
        <joint name="${location}_${side}_steer_joint">
          <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
      </transmission>
    </xacro:if> -->

  </xacro:macro>

  <xacro:macro name="linkage" params="location lon side lat steer">

    <link name="${location}_${side}_linkage">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius=".05" length=".05"/>
        </geometry>
        <material name="white"/>
      </visual>
      <xacro:solid_cylinder_inertial mass="10" r=".1" d="${chassis_width/2}"/>
    </link>

    <xacro:if value="${steer}">
      <joint name="${location}_${side}_steer_joint" type="continuous">
        <axis xyz="0 0 1" rpy="0 0 0" />
        <parent link="chassis"/>
        <child link="${location}_${side}_linkage"/>
        <origin xyz="${chassis_length*lon/3} ${chassis_width*lat/2} -${chassis_height/2}" rpy="0 0 0"/>
      </joint>
    </xacro:if>

    <xacro:unless value="${steer}">
      <joint name="${location}_${side}_axel_joint" type="fixed">
        <axis xyz="0 0 1" rpy="0 0 0" />
        <parent link="chassis"/>
        <child link="${location}_${side}_linkage"/>
        <origin xyz="${chassis_length*lon/3} ${chassis_width*lat/2} -${chassis_height/2}" rpy="0 0 0"/>
      </joint>
    </xacro:unless>

    <xacro:wheel side="${side}" location="${location}" steer="${steer}"/>

  </xacro:macro>

  <xacro:linkage location="front" lon="1" side="left" lat="1" steer="true"/>
  <xacro:linkage location="front" lon="1" side="right" lat="-1" steer="true"/>
  <xacro:linkage location="back" lon="-1" side="left" lat="1" steer="false"/>
  <xacro:linkage location="back" lon="-1" side="right" lat="-1" steer="false"/>

  <!-- Specify Gazebo Plugins to be used in model -->
  <gazebo>
    <!-- Gazebo plugin for ROS Control -->
    <!-- <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
    </plugin> -->
    <!-- Custom Gazebo_Push_Plugin to push model -->
    <!-- <plugin name="model_push" filename="libmodel_push.so"/> -->

    <!-- <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>ground_truth/state</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <frameName>world</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin> -->

    <plugin name="ackermann_control_plugin" filename="libAckermannControlPlugin.so">
      <!-- <chassis>chassis</chassis> -->
      <max_speed>35.7632</max_speed>
      <wheel_diam>${wheel_diam}</wheel_diam>
      <wheel_angular_velocity_p_gain>1e5</wheel_angular_velocity_p_gain>
      <wheel_angular_velocity_i_gain>0</wheel_angular_velocity_i_gain>
      <wheel_angular_velocity_d_gain>1e3</wheel_angular_velocity_d_gain>
      <wheel_steering_angle_p_gain>1e4</wheel_steering_angle_p_gain>
      <wheel_steering_angle_i_gain>0</wheel_steering_angle_i_gain>
      <wheel_steering_angle_d_gain>1e3</wheel_steering_angle_d_gain>
      <longitudinal_length_between_wheels>${chassis_length*2/3}</longitudinal_length_between_wheels>
      <lateral_width_between_wheels>${chassis_width}</lateral_width_between_wheels>
    </plugin>
  </gazebo>

</robot>
